define("tpl!broncoPortableInteraction/bronco/creator/tpl/propertiesForm",["handlebars"],function(hb){return hb.template(function(Handlebars,depth0,helpers,partials,data){this.compilerInfo=[4,">= 1.0.0"],helpers=this.merge(helpers,Handlebars.helpers),data=data||{};var stack1,helper,options,buffer="",helperMissing=helpers.helperMissing,escapeExpression=this.escapeExpression
;return buffer+='<div class="panel">\n  <p><b>PCI conçue par la DEPP</b></p>\n  <p>Format IMS - 2023 </p>\n  <p>Ministère de l\'éducation nationale</p>\n  <p>France</p>\n  <p>Version : 1.0.1</p>\n  <p>Réalisation <a href=\'http://www.wiquid.fr\' target="_blank">Wiquid</a></p>\n\n</div>\n\n<div class="panel">\n    <label for="" class="has-icon">'+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Response identifier",options):helperMissing.call(depth0,"__","Response identifier",options)))+'</label>\n    <span class="icon-help tooltipstered" data-tooltip="~ .tooltip-content:first" data-tooltip-theme="info"></span>\n    <div class="tooltip-content">'+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,'The identifier of the choice. This identifier must not be used by any other response or item variable. An identifier is a string of characters that must start with a Letter or an underscore ("_") and contain only Letters, underscores, hyphens ("-"), period (".", a.k.a. full-stop), Digits, CombiningChars and Extenders.',options):helperMissing.call(depth0,"__",'The identifier of the choice. This identifier must not be used by any other response or item variable. An identifier is a string of characters that must start with a Letter or an underscore ("_") and contain only Letters, underscores, hyphens ("-"), period (".", a.k.a. full-stop), Digits, CombiningChars and Extenders.',options)))+'</div>\n\n    <input type="text" \n           name="identifier" \n           value="',
(helper=helpers.identifier)?stack1=helper.call(depth0,{hash:{},data:data}):(helper=depth0&&depth0.identifier,stack1="function"==typeof helper?helper.call(depth0,{hash:{},data:data}):helper),buffer+=escapeExpression(stack1)+'" \n           placeholder="e.g. RESPONSE" \n           data-validate="$notEmpty; $qtiIdentifier; $availableIdentifier(serial=',(helper=helpers.serial)?stack1=helper.call(depth0,{hash:{},data:data}):(helper=depth0&&depth0.serial,stack1="function"==typeof helper?helper.call(depth0,{hash:{},data:data}):helper),buffer+=escapeExpression(stack1)+');">\n</div>'})}),
define("broncoPortableInteraction/bronco/creator/widget/states/Question",["taoQtiItem/qtiCreator/widgets/states/factory","taoQtiItem/qtiCreator/widgets/interactions/states/Question","taoQtiItem/qtiCreator/widgets/helpers/formElement","tpl!broncoPortableInteraction/bronco/creator/tpl/propertiesForm","lodash"],function(stateFactory,Question,formElement,formTpl,_){"use strict";var broncoInteractionStateQuestion=stateFactory.extend(Question,function(){},function(){});return broncoInteractionStateQuestion.prototype.initForm=function(){var _widget=this.widget,$form=_widget.$form,interaction=_widget.element,response=interaction.getResponseDeclaration()
;$form.html(formTpl({serial:response.serial,identifier:interaction.attr("responseIdentifier")})),formElement.initWidget($form),formElement.setChangeCallbacks($form,interaction,{identifier:function(i,value){response.id(value),interaction.attr("responseIdentifier",value)}})},broncoInteractionStateQuestion}),define("broncoPortableInteraction/bronco/creator/widget/states/states",["taoQtiItem/qtiCreator/widgets/states/factory","taoQtiItem/qtiCreator/widgets/interactions/customInteraction/states/states","broncoPortableInteraction/bronco/creator/widget/states/Question"],function(factory,states){"use strict"
;return factory.createBundle(states,arguments,["answer","correct","map"])}),define("broncoPortableInteraction/bronco/creator/widget/Widget",["taoQtiItem/qtiCreator/widgets/interactions/customInteraction/Widget","broncoPortableInteraction/bronco/creator/widget/states/states"],function(Widget,states){"use strict";var broncoScaleInteractionWidget=Widget.clone();return broncoScaleInteractionWidget.initCreator=function(){this.registerStates(states),Widget.initCreator.call(this),this.element.getResponseDeclaration().setTemplate("NONE")},broncoScaleInteractionWidget}),define("tpl!broncoPortableInteraction/bronco/creator/tpl/markup",["handlebars"],function(hb){
return hb.template(function(Handlebars,depth0,helpers,partials,data){this.compilerInfo=[4,">= 1.0.0"],helpers=this.merge(helpers,Handlebars.helpers),data=data||{};var stack1,helper,buffer="";return buffer+='<div class="bronco">\n    <div class="prompt">',(helper=helpers.prompt)?stack1=helper.call(depth0,{hash:{},data:data}):(helper=depth0&&depth0.prompt,stack1="function"==typeof helper?helper.call(depth0,{hash:{},data:data}):helper),(stack1||0===stack1)&&(buffer+=stack1),
buffer+='</div>\n    <div class="bonnesante">Chez un individu en bonne santé</div>  \n    <div class="asthmatique">Chez un individu asthmatique</div>\n      \n    <div class="svghome">\n        <div class="alveole">Paroi de l\'alvéole pulmonaire</div>\n        <div class="paroi">Paroi de la bronchiole </div>\n    </div>\n    \n\n  <div class="polludiv">\n    <span  class="leg moins">- Moins de pollution</span>\n    <span  class="leg plus">+ Plus de pollution</span>\n    <div class="consigne">Avec la souris, déplacer le curseur afin de faire varier le niveau de pollution de l\'air.</div>\n  </div>\n\n\n\n<div id="broncoanswer" class="broncoanswer"></div>\n</div>'
})}),define("broncoPortableInteraction/imsPciCreator",["lodash","broncoPortableInteraction/bronco/creator/widget/Widget","tpl!broncoPortableInteraction/bronco/creator/tpl/markup"],function(_,Widget,markupTpl){"use strict";return{getTypeIdentifier:function(){return"broncoPortableInteraction"},getWidget:function(){return Widget},getDefaultProperties:function(pci){return{level:5,"label-min":"min","label-max":"max"}},afterCreate:function(pci){pci.getResponseDeclaration().setTemplate("NONE")},getMarkupTemplate:function(){return markupTpl},getMarkupData:function(pci,defaultData){return defaultData.prompt=pci.data("prompt"),defaultData}}}),
define(["broncoPortableInteraction/imsPciCreator"],function(IMSPCI){return IMSPCI});
//# sourceMappingURL=imsPciCreator.min.js.map