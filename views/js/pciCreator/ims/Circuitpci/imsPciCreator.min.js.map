{"version":3,"sources":["../../../wiquid/views/js/pciCreator/ims/Circuitpci/interaction/creator/tpl/propertiesForm!tpl","../../../wiquid/views/js/pciCreator/ims/Circuitpci/interaction/creator/widget/states/Question.js","../../../wiquid/views/js/pciCreator/ims/Circuitpci/interaction/creator/widget/states/Answer.js","../../../wiquid/views/js/pciCreator/ims/Circuitpci/interaction/creator/widget/states/states.js","../../../wiquid/views/js/pciCreator/ims/Circuitpci/interaction/creator/widget/Widget.js","../../../wiquid/views/js/pciCreator/ims/Circuitpci/interaction/creator/tpl/markup!tpl","../../../wiquid/views/js/pciCreator/ims/Circuitpci/imsPciCreator.js"],"names":["define","hb","template","Handlebars","depth0","helpers","partials","data","this","compilerInfo","merge","helper","options","buffer","helperMissing","escapeExpression","__","hash","call","stateFactory","Question","formElement","simpleEditor","formTpl","_","CircuitInteractionStateQuestion","extend","$container","widget","interaction","element","create","text","prop","destroy","prototype","initForm","_widget","$form","response","getResponseDeclaration","html","serial","initWidget","find","on","triggerPci","length","onPci","value","etiquette","console","log","setChangeCallbacks","Answer","answerStateHelper","InteractionStateAnswer","$original","initResponseForm","rpTemplates","factory","states","createBundle","arguments","Widget","CircuitScaleInteractionWidget","clone","initCreator","registerStates","setTemplate","stack1","prompt","markupTpl","getTypeIdentifier","getWidget","getDefaultProperties","pci","savedCircuit","afterCreate","getMarkupTemplate","getMarkupData","defaultData","IMSPCI"],"mappings":"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","file":"imsPciCreator.min.js","sourcesContent":["\ndefine('tpl!CircuitPCI/interaction/creator/tpl/propertiesForm', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"panel\\\">\\n    <label for=\\\"inventaire\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Correction\", options) : helperMissing.call(depth0, \"__\", \"Correction\", options)))\n    + \"</label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content:first\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Correction TODO\", options) : helperMissing.call(depth0, \"__\", \"Correction TODO\", options)))\n    + \"</span>\\n    <button id=\\\"correct\\\">Sauver la correction</button>\\n    <div class=\\\"etiqSaved\\\"></div>\\n    <label for=\\\"inventaire\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Notes de Dev.\", options) : helperMissing.call(depth0, \"__\", \"Notes de Dev.\", options)))\n    + \"</label>\\n    <div style=\\\"font-size: 0.7em;\\\">\\n        <p>On note que dans cette version, nous ne disposons pas d'un loader. Le concepteur d'item ne peut pas figer l'état du circuit sur le canvas. L'élève doit pour le moment commencer son travail avec un canvas vide. L'item rechargé dans l'éditeur présente\\n            lui-aussi un canvas vide, même si la logique de la correction a été enregistrée.</p>\\n        <p>Nous sommes bien en mesure de mémoriser la logique du Circuit à travers un JSON. Le concepteur d'item peut ainsi sauvegarder sa correction qui peut s'afficher sous la forme d'une vignette dans le panel option de la PCI.\\n        </p>\\n        <p>Présentées sous la forme d'un JSON, les valeurs des connecteurs permettent de définir quel connecteur est connecté avec quel autre. Exemple : un connecteur 1 de la batterie aura comme valeur 2, il est connecté avec le cable qui a son connecteur1\\n            de valeur 2 également.</p>\\n        <p>On pourrait envisager la correction automatique, partielle ou totale en comparant le JSON de correction avec le JSON représentant la production de l'élève.</p>\\n        <p>Pistes futurs dev. : </p>\\n        <ol>\\n            <li>Loader de composant à partir d'un script JSON</li>\\n            <li>Correction automatique.</li>\\n            <li>Utiliser ce framework pour une PCI MindMap plus ouverte</li>\\n            <li>Envisager des sets de composants</li>\\n        </ol>\\n    </div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('CircuitPCI/interaction/creator/widget/states/Question',[\n    'taoQtiItem/qtiCreator/widgets/states/factory',\n    'taoQtiItem/qtiCreator/widgets/interactions/states/Question',\n    'taoQtiItem/qtiCreator/widgets/helpers/formElement',\n    'taoQtiItem/qtiCreator/editor/simpleContentEditableElement',\n    'tpl!CircuitPCI/interaction/creator/tpl/propertiesForm',\n    'lodash',\n    'jquery'\n], function(stateFactory, Question, formElement, simpleEditor, formTpl, _) {\n    'use strict';\n\n    var CircuitInteractionStateQuestion = stateFactory.extend(Question, function() {\n\n        var $container = this.widget.$container,\n            interaction = this.widget.element;\n\n        simpleEditor.create($container, '.Circuit-label-min', function(text) {\n            interaction.prop('label-min', text);\n        });\n\n        simpleEditor.create($container, '.Circuit-label-max', function(text) {\n            interaction.prop('label-max', text);\n        });\n\n    }, function() {\n\n        simpleEditor.destroy(this.widget.$container);\n    });\n\n    CircuitInteractionStateQuestion.prototype.initForm = function() {\n\n        var _widget = this.widget,\n            $form = _widget.$form,\n            interaction = _widget.element,\n            response = interaction.getResponseDeclaration();\n\n        //render the form using the form template\n        $form.html(formTpl({\n            serial: response.serial\n        }));\n\n        //init form javascript\n        formElement.initWidget($form);\n\n        //********************Save Snap State***************************/\n        $form.find(\"#correct\").on(\"click\", function() {\n            interaction.triggerPci('correctChange');\n        });\n\n\n        if (interaction.prop('etiquette').length > 0) {\n            $form.find(\".etiqSaved\").html('<img src = \"' + interaction.prop('etiquette') + '\" title = \"aperçu\" alt = \"aperçu\" >')\n        }\n\n\n        interaction.onPci('grabCorrectChange', function(value, etiquette) {\n            console.log(value)\n            interaction.prop('savedCircuit', value);\n            interaction.prop('etiquette', etiquette);\n            $form.find(\".etiqSaved\").html('<img src=\"' + etiquette + '\" title=\"aperçu\" alt=\"aperçu\" />')\n        });\n\n        //init data change callbacks\n        formElement.setChangeCallbacks($form, interaction, {\n            /* level: function(interaction, value) {\n\n                //update the pci property value:\n                interaction.prop('level', value);\n\n                //trigger change event:\n                interaction.triggerPci('listchange', [parseInt(value)]);\n            } */\n        });\n\n\n\n    };\n\n    return CircuitInteractionStateQuestion;\n});\n","define('CircuitPCI/interaction/creator/widget/states/Answer',[\n    'taoQtiItem/qtiCreator/widgets/states/factory',\n    'taoQtiItem/qtiCreator/widgets/interactions/states/Answer',\n    'taoQtiItem/qtiCreator/widgets/interactions/helpers/answerState',\n    'taoQtiItem/qtiCreator/widgets/helpers/content'\n], function(stateFactory, Answer, answerStateHelper) {\n    'use strict';\n\n    var InteractionStateAnswer = stateFactory.extend(Answer, function initAnswerState() {\n        this.widget.$original.find('.Circuit input').prop('disabled', true);\n    }, function exitAnswerState() {\n        this.widget.$original.find('.Circuit input').prop('disabled', false);\n    });\n\n    InteractionStateAnswer.prototype.initResponseForm = function initResponseForm() {\n\n        answerStateHelper.initResponseForm(this.widget, { rpTemplates: ['CUSTOM', 'NONE'] });\n    };\n\n    return InteractionStateAnswer;\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('CircuitPCI/interaction/creator/widget/states/states',[\n    'taoQtiItem/qtiCreator/widgets/states/factory',\n    'taoQtiItem/qtiCreator/widgets/interactions/customInteraction/states/states',\n    'CircuitPCI/interaction/creator/widget/states/Question',\n    'CircuitPCI/interaction/creator/widget/states/Answer'\n], function(factory, states) {\n    'use strict';\n    return factory.createBundle(states, arguments, ['correct', 'map']);\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('CircuitPCI/interaction/creator/widget/Widget',[\n    'taoQtiItem/qtiCreator/widgets/interactions/customInteraction/Widget',\n    'CircuitPCI/interaction/creator/widget/states/states'\n], function(Widget, states) {\n    'use strict';\n\n    var CircuitScaleInteractionWidget = Widget.clone();\n\n    CircuitScaleInteractionWidget.initCreator = function() {\n\n        this.registerStates(states);\n\n        Widget.initCreator.call(this);\n\n        //for existing Circuit scale PCI, ensure that the rp template is always NONE\n        this.element.getResponseDeclaration().setTemplate('NONE');\n    };\n\n    return CircuitScaleInteractionWidget;\n});\n","\ndefine('tpl!CircuitPCI/interaction/creator/tpl/markup', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\";\n\n\n  buffer += \"<div class=\\\"CircuitInteraction\\\">\\n    <div class=\\\"circuit\\\">\\n        <div class=\\\"prompt\\\">\";\n  if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</div>\\n        <div class=\\\"toolbar\\\"></div>\\n        <div id=\\\"divFloatingEditBox\\\"></div>\\n        <div class=\\\"divEditor\\\">\\n            <canvas width=\\\"900\\\" height=\\\"500\\\"></canvas>\\n        </div>\\n        <div class=\\\"data\\\">\\n            <div class=\\\"CSaver\\\"></div>\\n            <div class=\\\"raw\\\"></div>\\n            <div class=\\\"etiquette\\\"></div>\\n        </div>\\n        <div class=\\\"help\\\">\\n\\n        </div>\\n    </div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('CircuitPCI/imsPciCreator',[\n    'lodash',\n    'CircuitPCI/interaction/creator/widget/Widget',\n    'tpl!CircuitPCI/interaction/creator/tpl/markup'\n], function(_, Widget, markupTpl) {\n    'use strict';\n\n    var _typeIdentifier = 'CircuitPCI';\n\n    return {\n        /**\n         * (required) Get the typeIdentifier of the custom interaction\n         * \n         * @returns {String}\n         */\n        getTypeIdentifier: function() {\n            return _typeIdentifier;\n        },\n        /**\n         * (required) Get the widget prototype\n         * Used in the renderer\n         * \n         * @returns {Object} Widget\n         */\n        getWidget: function() {\n            return Widget;\n        },\n        /**\n         * (optional) Get the default properties values of the pci.\n         * Used on new pci instance creation\n         * \n         * @returns {Object}\n         */\n        getDefaultProperties: function(pci) {\n            return {\n                savedCircuit: \"\",\n                etiquette: \"\"\n            };\n        },\n        /**\n         * (optional) Callback to execute on the \n         * Used on new pci instance creation\n         * \n         * @returns {Object}\n         */\n        afterCreate: function(pci) {\n            //always set the NONE response processing mode to Circuit scale\n            pci.getResponseDeclaration().setTemplate('NONE');\n        },\n        /**\n         * (required) Gives the qti pci xml template \n         * \n         * @returns {function} handlebar template\n         */\n        getMarkupTemplate: function() {\n            return markupTpl;\n        },\n        /**\n         * (optional) Allows passing additional data to xml template\n         * \n         * @returns {function} handlebar template\n         */\n        getMarkupData: function(pci, defaultData) {\n            defaultData.prompt = pci.data('prompt');\n            return defaultData;\n        }\n    };\n});\n"]}